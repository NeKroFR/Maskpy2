from random import randint as X2, shuffle as X1

def X4(X9, X6):
    if ((((X6 ^ X9) - ((X9 & 3) * ((~ X6) & X9))) < 0) and ((X9 * 0) == 0)):
        (X9, X6) = (X6, X9)
    X5 = ((((((X2(1, 10) * X9) + ((X9 & X6) * 0)) + ((X9 & X6) * 0)) + ((X6 & X9) * 0)) + ((X9 & X9) * 0)) + ((X6 & X6) * 0))
    X7 = ((((((((((X5 ^ X9) - ((X9 & 3) * ((~ X5) & X9))) ^ 0) - ((X6 & 3) * ((~ ((X5 ^ X9) - ((X9 & 3) * ((~ X5) & X9)))) & 0))) ^ 0) - ((X6 & 3) * ((~ ((((X5 ^ X9) - ((X9 & 3) * ((~ X5) & X9))) ^ 0) - ((X6 & 3) * ((~ ((X5 ^ X9) - ((X9 & 3) * ((~ X5) & X9)))) & 0)))) & 0))) + ((X9 & X9) * 0)) + ((X9 & X9) * 0)) + ((X9 & X6) * 0)) + ((X9 & X6) * 0))
    X8 = [X9, X6, X5, X7]
    X1(X8)
    if (((((X9 * 0) == 0) or ((X9 & X9) == X9)) or ((X9 | 0) == X9)) and (((X9 | X6) >= X9) and ((X6 ^ 0) == X6))):
        return ((((((((((((((((((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0)) ^ X8[2]) - ((X6 & 3) * ((~ ((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0))) & X8[2]))) ^ 0) - ((X9 & 3) * ((~ ((((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0)) ^ X8[2]) - ((X6 & 3) * ((~ ((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0))) & X8[2])))) & 0))) + ((X9 & X9) * 0)) + ((X9 & X9) * 0)) + ((X6 & X6) * 0)) + ((X9 & X6) * 0)) + ((X9 & X6) * 0)) ^ (((X8[3] % ((((X9 ^ X6) + ((X9 | 1) * (X9 & X6))) + ((X6 & X9) * 0)) + ((X9 & X6) * 0))) + ((X6 & X6) * 0)) + ((X9 & X9) * 0))) - ((X6 & 3) * ((~ (((((((((((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0)) ^ X8[2]) - ((X6 & 3) * ((~ ((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0))) & X8[2]))) ^ 0) - ((X9 & 3) * ((~ ((((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0)) ^ X8[2]) - ((X6 & 3) * ((~ ((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0))) & X8[2])))) & 0))) + ((X9 & X9) * 0)) + ((X9 & X9) * 0)) + ((X6 & X6) * 0)) + ((X9 & X6) * 0)) + ((X9 & X6) * 0))) & (((X8[3] % ((((X9 ^ X6) + ((X9 | 1) * (X9 & X6))) + ((X6 & X9) * 0)) + ((X9 & X6) * 0))) + ((X6 & X6) * 0)) + ((X9 & X9) * 0))))) ^ 0) - ((X6 & 3) * ((~ (((((((((((((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0)) ^ X8[2]) - ((X6 & 3) * ((~ ((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0))) & X8[2]))) ^ 0) - ((X9 & 3) * ((~ ((((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0)) ^ X8[2]) - ((X6 & 3) * ((~ ((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0))) & X8[2])))) & 0))) + ((X9 & X9) * 0)) + ((X9 & X9) * 0)) + ((X6 & X6) * 0)) + ((X9 & X6) * 0)) + ((X9 & X6) * 0)) ^ (((X8[3] % ((((X9 ^ X6) + ((X9 | 1) * (X9 & X6))) + ((X6 & X9) * 0)) + ((X9 & X6) * 0))) + ((X6 & X6) * 0)) + ((X9 & X9) * 0))) - ((X6 & 3) * ((~ (((((((((((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0)) ^ X8[2]) - ((X6 & 3) * ((~ ((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0))) & X8[2]))) ^ 0) - ((X9 & 3) * ((~ ((((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0)) ^ X8[2]) - ((X6 & 3) * ((~ ((((X8[0] ^ X8[1]) + ((X6 | 1) * (X8[0] & X8[1]))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0))) & X8[2])))) & 0))) + ((X9 & X9) * 0)) + ((X9 & X9) * 0)) + ((X6 & X6) * 0)) + ((X9 & X6) * 0)) + ((X9 & X6) * 0))) & (((X8[3] % ((((X9 ^ X6) + ((X9 | 1) * (X9 & X6))) + ((X6 & X9) * 0)) + ((X9 & X6) * 0))) + ((X6 & X6) * 0)) + ((X9 & X9) * 0)))))) & 0))) + ((X9 & X6) * 0)) + ((X6 & X9) * 0)) + ((X9 & X9) * 0))
    else:
        return (((X9 & X6) & (X6 & X6)) | ((X9 & X6) * (X9 * X6)))
X3 = X2(1, 10)
print('Hello,', end=' ')
print(f'the solution is {(X4(X2(40, 140), X2(40, 140)) + X3)}.')