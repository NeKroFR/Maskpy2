from random import randint as X1, shuffle as X3

def X4(X8, X5):
    X9 = 0
    X6 = 0
    X11 = 0
    X10 = 9
    X7 = 0
    while (X10 != (- 1)):
        if (X10 == 9):
            X10 = 8
        elif (X10 == 8):
            if ((((((X5 ^ X8) - ((X5 & 3) * ((~ X5) & X8))) ^ 0) - ((X8 & 3) * ((~ ((X5 ^ X8) - ((X5 & 3) * ((~ X5) & X8)))) & 0))) < 0) and ((X5 * 0) == 0)):
                X10 = 7
            else:
                X10 = 6
        elif (X10 == 7):
            (X8, X5) = (X5, X8)
            X10 = 6
        elif (X10 == 6):
            X6 = ((((((X1(1, 10) * X8) + ((X8 & X8) * 0)) + ((X8 & X8) * 0)) + ((X5 & X5) * 0)) + ((X5 & X8) * 0)) + ((X8 & X5) * 0))
            X10 = 5
        elif (X10 == 5):
            X9 = (((((X6 ^ X8) - ((X5 & 3) * ((~ X6) & X8))) + ((X5 & X5) * 0)) + ((X5 & X5) * 0)) + ((X8 & X5) * 0))
            X10 = 4
        elif (X10 == 4):
            X11 = [X8, X5, X6, X9]
            X10 = 3
        elif (X10 == 3):
            X3(X11)
            X10 = 2
        elif (X10 == 2):
            if ((((((((((X8 * 0) + ((X8 & X5) * 0)) + ((X8 & X5) * 0)) ^ 0) - ((X5 & 3) * ((~ (((X8 * 0) + ((X8 & X5) * 0)) + ((X8 & X5) * 0))) & 0))) == 0) and ((X5 * 0) == 0)) or ((((((((((((((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) ^ 0) + ((X8 | 1) * (((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X5) * 0)) ^ X8) - ((X5 & 3) * ((~ ((((((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) ^ 0) + ((X8 | 1) * (((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X5) * 0))) & X8))) ^ 0) - ((X8 & 3) * ((~ ((((((((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) ^ 0) + ((X8 | 1) * (((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X5) * 0)) ^ X8) - ((X5 & 3) * ((~ ((((((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) ^ 0) + ((X8 | 1) * (((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X5) * 0))) & X8)))) & 0))) ^ 0) - ((X8 & 3) * ((~ ((((((((((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) ^ 0) + ((X8 | 1) * (((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X5) * 0)) ^ X8) - ((X5 & 3) * ((~ ((((((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) ^ 0) + ((X8 | 1) * (((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X5) * 0))) & X8))) ^ 0) - ((X8 & 3) * ((~ ((((((((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) ^ 0) + ((X8 | 1) * (((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X5) * 0)) ^ X8) - ((X5 & 3) * ((~ ((((((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) ^ 0) + ((X8 | 1) * (((((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) ^ 0) + ((X5 | 1) * (((X8 ^ 0) + ((X8 | 1) * (X8 & 0))) & 0))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X5) * 0))) & X8)))) & 0)))) & 0))) == 0) and ((X5 * 0) == 0))) and ((((((((((X8 * 0) + ((X5 & X8) * 0)) + ((X5 & X5) * 0)) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) ^ 0) - ((X8 & 3) * ((~ (((((X8 * 0) + ((X5 & X8) * 0)) + ((X5 & X5) * 0)) + ((X5 & X5) * 0)) + ((X8 & X8) * 0))) & 0))) == 0) and ((X8 * 0) == 0)) or (((((((X5 ^ 0) + ((X8 & X8) * 0)) + ((X8 & X8) * 0)) ^ X5) - ((X5 & 3) * ((~ (((X5 ^ 0) + ((X8 & X8) * 0)) + ((X8 & X8) * 0))) & X5))) == 0) and ((X5 * 0) == 0)))) or (((((((((((X5 & X5) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) ^ X5) - ((X5 & 3) * ((~ (((X5 & X5) + ((X5 & X5) * 0)) + ((X8 & X8) * 0))) & X5))) ^ 0) - ((X8 & 3) * ((~ (((((X5 & X5) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) ^ X5) - ((X5 & 3) * ((~ (((X5 & X5) + ((X5 & X5) * 0)) + ((X8 & X8) * 0))) & X5)))) & 0))) ^ 0) - ((X5 & 3) * ((~ (((((((X5 & X5) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) ^ X5) - ((X5 & 3) * ((~ (((X5 & X5) + ((X5 & X5) * 0)) + ((X8 & X8) * 0))) & X5))) ^ 0) - ((X8 & 3) * ((~ (((((X5 & X5) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) ^ X5) - ((X5 & 3) * ((~ (((X5 & X5) + ((X5 & X5) * 0)) + ((X8 & X8) * 0))) & X5)))) & 0)))) & 0))) <= 0) and ((X5 * 0) == 0))):
                X10 = 0
            else:
                X10 = 1
        elif (X10 == 1):
            X7 = X8
            X10 = (- 1)
        elif (X10 == 0):
            X7 = (((((((((((((((((((((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) ^ 0) + ((X5 | 1) * (((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) + ((X5 & X8) * 0)) + ((X8 & X8) * 0)) ^ X11[2]) - ((X5 & 3) * ((~ ((((((((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) ^ 0) + ((X5 | 1) * (((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) + ((X5 & X8) * 0)) + ((X8 & X8) * 0))) & X11[2]))) ^ 0) - ((X5 & 3) * ((~ ((((((((((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) ^ 0) + ((X5 | 1) * (((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) + ((X5 & X8) * 0)) + ((X8 & X8) * 0)) ^ X11[2]) - ((X5 & 3) * ((~ ((((((((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) ^ 0) + ((X5 | 1) * (((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) + ((X5 & X8) * 0)) + ((X8 & X8) * 0))) & X11[2])))) & 0))) + ((X5 & X8) * 0)) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) + ((X8 & X8) * 0)) ^ ((((((X11[3] % (((((X8 ^ X5) + ((X8 | 1) * (X8 & X5))) + ((X8 & X8) * 0)) + ((X8 & X8) * 0)) + ((X8 & X5) * 0))) + ((X5 & X5) * 0)) + ((X8 & X5) * 0)) + ((X8 & X5) * 0)) + ((X5 & X5) * 0)) + ((X8 & X5) * 0))) - ((X5 & 3) * ((~ ((((((((((((((((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) ^ 0) + ((X5 | 1) * (((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) + ((X5 & X8) * 0)) + ((X8 & X8) * 0)) ^ X11[2]) - ((X5 & 3) * ((~ ((((((((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) ^ 0) + ((X5 | 1) * (((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) + ((X5 & X8) * 0)) + ((X8 & X8) * 0))) & X11[2]))) ^ 0) - ((X5 & 3) * ((~ ((((((((((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) ^ 0) + ((X5 | 1) * (((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) + ((X5 & X8) * 0)) + ((X8 & X8) * 0)) ^ X11[2]) - ((X5 & 3) * ((~ ((((((((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) ^ 0) + ((X5 | 1) * (((X11[0] ^ X11[1]) + ((X8 | 1) * (X11[0] & X11[1]))) & 0))) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) + ((X5 & X8) * 0)) + ((X8 & X8) * 0))) & X11[2])))) & 0))) + ((X5 & X8) * 0)) + ((X5 & X5) * 0)) + ((X8 & X8) * 0)) + ((X8 & X8) * 0))) & ((((((X11[3] % (((((X8 ^ X5) + ((X8 | 1) * (X8 & X5))) + ((X8 & X8) * 0)) + ((X8 & X8) * 0)) + ((X8 & X5) * 0))) + ((X5 & X5) * 0)) + ((X8 & X5) * 0)) + ((X8 & X5) * 0)) + ((X5 & X5) * 0)) + ((X8 & X5) * 0))))) + ((X5 & X8) * 0)) + ((X5 & X5) * 0)) + ((X5 & X8) * 0))
            X10 = (- 1)
    return X7
X2 = X1(1, 10)
print('Hello,', end=' ')
print(f'the solution is {(X4(X1(40, 140), X1(40, 140)) + X2)}.')